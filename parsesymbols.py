import os
import sys
import re

syms = []

def main():
    files = sys.argv[1:len(sys.argv)]
    for file in files:
        if not os.path.isfile(file):
            print("%s file does not exist" % file)
            exit(1)

    for file in files:
        with open(file, "r") as f:
            for line in f:
                if re.match("^(OMICRON_EXPORT) .*[\s\*](\w+)\(", line): # functions
                    matches = re.findall("^(OMICRON_EXPORT) .*[\s\*](\w+)\(", line)
                    syms.append(matches[0][1])
                elif re.match("^(OMICRON_EXPORT) extern.*[\s\*](\w+)", line):
                    matches = re.findall("^(OMICRON_EXPORT) extern.*[\s\*](\w+)", line)
                    syms.append(matches[0][1])

    with open("omicron_symbols.ld", "w") as f:
        print("/* Autogenerated by parsesymbols.py */\n/* Simply mark a function or variable declaration with OMICRON_EXPORT to expose it in the dynamic symbol table. */\n{", file=f)
        for sym in syms:
            print("    %s;" % sym, file=f)
        print("};", file=f)

if __name__ == "__main__":
    main()
